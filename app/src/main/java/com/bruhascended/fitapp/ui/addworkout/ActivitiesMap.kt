package com.bruhascended.fitapp.ui.addworkout

import android.content.Context
import com.bruhascended.db.activity.types.ActivityType

object ActivitiesMap {
    val activitiesMap = mutableMapOf(
        "aerobics" to ActivityType.Aerobics,
        "archery" to ActivityType.Archery,
        "badminton" to ActivityType.Badminton,
        "baseball" to ActivityType.BaseBall,
        "basketball" to ActivityType.BasketBall,
        "biathlon" to ActivityType.Biathlon,
        "biking" to ActivityType.Biking,
        "biking.hand" to ActivityType.BikingHand,
        "biking.mountain" to ActivityType.BikingMountain,
        "biking,road" to ActivityType.BikingRoad,
        "biking.spinning" to ActivityType.BikingSpinning,
        "biking.stationary" to ActivityType.BikingStationary,
        "biking.utility" to ActivityType.BikingUtility,
        "boxing" to ActivityType.Boxing,
        "calisthenics" to ActivityType.Calisthenics,
        "circuit_training" to ActivityType.CircuitTraining,
        "cricket" to ActivityType.Cricket,
        "crossfit" to ActivityType.CrossFit,
        "curling" to ActivityType.Curling,
        "dancing" to ActivityType.Dancing,
        "diving" to ActivityType.Diving,
        "elevator" to ActivityType.Elevator,
        "elliptical" to ActivityType.Elliptical,
        "ergometer" to ActivityType.ErgoMeter,
        "escalator" to ActivityType.Escalator,
        "fencing" to ActivityType.Fencing,
        "football.american" to ActivityType.Football,
        "football.australian" to ActivityType.Football,
        "football.soccer" to ActivityType.Football,
        "frisbee_disc" to ActivityType.Frisbee,
        "gardening" to ActivityType.Gardening,
        "golf" to ActivityType.Golf,
        "guided_breathing" to ActivityType.GuidedBreathing,
        "gymnastics" to ActivityType.Gymnastics,
        "handball" to ActivityType.HandBall,
        "interval_training.high_intensity" to ActivityType.HighIntensityIntervalTraining,
        "hiking" to ActivityType.Hiking,
        "hockey" to ActivityType.Hockey,
        "horseback_riding" to ActivityType.HorseBackRiding,
        "housework" to ActivityType.HouseWork,
        "ice_skating" to ActivityType.IceSkating,
        "interval_training" to ActivityType.IntervalTraining,
        "in_vehicle" to ActivityType.InVehicle,
        "jump_rope" to ActivityType.JumpRope,
        "kayaking" to ActivityType.Kayaking,
        "kettlebell_training" to ActivityType.KettleBellTraining,
        "kickboxing" to ActivityType.Kickboxing,
        "kick_scooter" to ActivityType.KickScooter,
        "kitesurfing" to ActivityType.KiteSurfing,
        "martial_arts" to ActivityType.MartialArts,
        "meditation" to ActivityType.Meditation,
        "martial_arts.mixed" to ActivityType.MixedMartialArts,
        "other" to ActivityType.Other,
        "p90x" to ActivityType.P90X,
        "paragliding" to ActivityType.ParaGliding,
        "pilates" to ActivityType.Pilates,
        "polo" to ActivityType.Polo,
        "racquetball" to ActivityType.RacquetBall,
        "rock_climbing" to ActivityType.RockClimbing,
        "rowing" to ActivityType.Rowing,
        "rowing.machine" to ActivityType.RowingMachine,
        "rugby" to ActivityType.Rugby,
        "running" to ActivityType.Running,
        "running.jogging" to ActivityType.Jogging,
        "running.sand" to ActivityType.Running,
        "running.treadmill" to ActivityType.RunningTreadMill,
        "sailing" to ActivityType.Sailing,
        "scuba_diving" to ActivityType.ScubaDiving,
        "skateboarding" to ActivityType.SkateBoarding,
        "skating" to ActivityType.Skating,
        "skating.cross" to ActivityType.Skating,
        "skating.indoor" to ActivityType.Skating,
        "skating.inline" to ActivityType.Skating,
        "skiing" to ActivityType.Skiing,
        "skiing.back_country" to ActivityType.Skiing,
        "skiing.cross_country" to ActivityType.Skiing,
        "skiing.downhill" to ActivityType.Skiing,
        "skiing.roller" to ActivityType.Skiing,
        "sledding" to ActivityType.Sledding,
        "sleep" to ActivityType.Sleeping,
        "snowboarding" to ActivityType.SnowBoarding,
        "snowmobile" to ActivityType.SnowMobile,
        "snowshoeing" to ActivityType.SnowShoeing,
        "softball" to ActivityType.SoftBall,
        "squash" to ActivityType.Squash,
        "stair_climbing" to ActivityType.StairClimbing,
        "stair_climbing.machine" to ActivityType.StairClimbing,
        "standup_paddleboarding" to ActivityType.StandupPaddleBoarding,
        "still" to ActivityType.Still,
        "strength_training" to ActivityType.StrengthTraining,
        "surfing" to ActivityType.Surfing,
        "swimming" to ActivityType.Swimming,
        "swimming.open_water" to ActivityType.Swimming,
        "swimming.pool" to ActivityType.Swimming,
        "table_tennis" to ActivityType.TableTennis,
        "team_sports" to ActivityType.TeamSports,
        "tennis" to ActivityType.Tennis,
        "tilting" to ActivityType.Tilting,
        "unknown" to ActivityType.Unknown,
        "volleyball" to ActivityType.VolleyBall,
        "volleyball.beach" to ActivityType.VolleyBall,
        "volleyball.indoor" to ActivityType.VolleyBall,
        "wakeboarding" to ActivityType.WakeBoarding,
        "walking" to ActivityType.Walking,
        "walking.fitness" to ActivityType.FitnessWalking,
        "walking.nordic" to ActivityType.WalkingNordic,
        "walking.stroller" to ActivityType.WalkingStroller,
        "walking.treadmill" to ActivityType.WalkingTreadMill,
        "water_polo" to ActivityType.WaterPolo,
        "weightlifting" to ActivityType.Weightlifting,
        "wheelchair" to ActivityType.WheelChair,
        "windsurfing" to ActivityType.WindSurfing,
        "yoga" to ActivityType.Yoga,
        "zumba" to ActivityType.Zumba
    )

    fun getActivityType(string: String): ActivityType? {
        return activitiesMap[string]
    }

    fun getActivityTypesList(context: Context): List<ActivityViewType> {
        val activitiesList = mutableListOf<ActivityViewType>()
        for (value in ActivityType.values()) {
            activitiesList.add(
                ActivityViewType(value.iconRes, value.getString(context))
            )
        }
        return activitiesList
    }
}